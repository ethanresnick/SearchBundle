<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="erd_search.lucene.class">ERD\SearchBundle\Search\LuceneSearch</parameter>
        <parameter key="erd_search.index_manager.class">ERD\SearchBundle\Search\IndexManager</parameter>
        <parameter key="erd_search.aggregate_entity_provider.class">ERD\SearchBundle\Provider\AggregateEntityProvider</parameter>
        <parameter key="erd_search.aggregate_synonym_provider.class">ERD\SearchBundle\Provider\AggregateSynonymProvider</parameter>
        <parameter key="erd_search.doctrine_subscriber.class">ERD\SearchBundle\Doctrine\Event\SearchSubscriber</parameter>
        <parameter key="erd_search.doctrine_provider.class">ERD\SearchBundle\Doctrine\Provider\EntitiesProvider</parameter>
        <parameter key="erd_search.indexable_handler.class">ERD\SearchBundle\Mapping\Annotation\IndexableHandler</parameter>
        <parameter key="erd_search.field_factory.class">ERD\SearchBundle\Search\FieldFactory</parameter>
        <parameter key="erd_search.indexable_annotation.class">ERD\SearchBundle\Mapping\Annotation\Indexable</parameter>
    </parameters>

    <services>
        <service id="erd_search.lucene" class="%erd_search.lucene.class%">
            <argument key="luceneIndexPath">%lucene.index.path%</argument>
            <argument key="analyzer">%lucene.analyzer%</argument>
            <!-- synonym providers will automatically be added here by the compiler pass -->
        </service>
        <service id="erd_search.index_manager" class="%erd_search.index_manager.class%" public="false">
            <argument type="service" id="erd_search.lucene" />
            <argument type="service" id="erd_search.aggregate_entity_provider" />
            <argument type="service" id="erd_search.indexable_handler" />
        </service>
        
        <!-- will be filled in with providers by the compiler pass. -->
        <service id="erd_search.aggregate_entity_provider" class="%erd_search.aggregate_entity_provider.class%" public="false" />
        <service id="erd_search.aggregate_synonym_provider" class="%erd_search.aggregate_synonym_provider.class%" public="false" />

        <service id="erd_search.indexable_handler" class="%erd_search.indexable_handler.class%" public="false">
            <argument type="service" id="annotations.file_cache_reader" />
            <argument type="service" id="erd_search.field_factory" />
        </service>        

        <service id="erd_search.cache_warmer" class="ERD\SearchBundle\CacheWarmer\IndexCacheWarmer" public="false">
            <argument type="service" id="erd_search.index_manager" />
            <tag name="kernel.cache_warmer" />
        </service>

        <service id="erd_search.field_factory" class="%erd_search.field_factory.class%" public="false" />
        
        <!-- if use doctrine events is enabled, "erd_search.doctrine_subscriber" service will be added-->
        <!-- if use doctrine entities is enabled, an "erd_search.doctrine_provider" service will be added. It'll be of class
            erd_search.doctrine_provider.class, and will be one of the providers registered with the AggregateEntityProvider.
        -->
    </services>
</container>